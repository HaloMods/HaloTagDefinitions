<?xml version="1.0" encoding="us-ascii" standalone="yes"?>
<tagGroup name="character" groupTag="char" groupTagParent="????" version="1" flags="9" procPostprocess="True">
	<block name="character_block" maxCount="1" display="character" flags="0" maxIdentifer="1" version="3">
		<versions>
			<character_tag_v1 size="288" sizeIdentifer="sizeof(struct character_definition_v1)" fieldCount="30">
				<fields>
					<field type="LongFlags" name="Character flags">
						<definition count="1">
							<entry>Flag1</entry>
						</definition>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="TagReference" name="parent character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="TagReference" name="unit">
						<definition flags="0" groupTag="unit" />
					</field>
					<field type="TagReference" name="style">
						<definition flags="0" groupTag="styl" />
					</field>
					<field type="UselessPad" name="" definition="16" />
					<field type="TagReference" name="major character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="StringId" name="model variant" />
					<field type="UselessPad" name="" definition="76" />
					<field type="Block" name="general properties">
						<block name="character_general_block" maxCount="1" display="character_general_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_general_block_fields size="12" sizeIdentifer="sizeof(struct character_general_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="general flags">
											<definition count="4">
												<entry>swarm</entry>
												<entry>flying</entry>
												<entry>dual wields</entry>
												<entry>uses gravemind</entry>
											</definition>
										</field>
										<field type="Enum" name="type">
											<definition count="20">
												<entry>elite</entry>
												<entry>jackal</entry>
												<entry>grunt</entry>
												<entry>hunter</entry>
												<entry>engineer</entry>
												<entry>assassin</entry>
												<entry>player</entry>
												<entry>marine</entry>
												<entry>crew</entry>
												<entry>combat_form</entry>
												<entry>infection_form</entry>
												<entry>carrier_form</entry>
												<entry>monitor</entry>
												<entry>sentinel</entry>
												<entry>none</entry>
												<entry>mounted_weapon</entry>
												<entry>brute</entry>
												<entry>prophet</entry>
												<entry>bugger</entry>
												<entry>juggernaut</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="UselessPad" name="" definition="100" />
										<field type="Real" name="scariness" help="the inherent scariness of the character" />
										<field type="Terminator" />
									</fields>
								</character_general_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="placement properties">
						<block name="character_placement_block" maxCount="1" display="character_placement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_placement_block_fields size="52" sizeIdentifer="sizeof(struct character_placement_properties)" fieldCount="14">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="Real" name="few upgrade chance (easy)" />
										<field type="Real" name="few upgrade chance (normal)" />
										<field type="Real" name="few upgrade chance (heroic)" />
										<field type="Real" name="few upgrade chance (legendary)" />
										<field type="Real" name="normal upgrade chance (easy)" />
										<field type="Real" name="normal upgrade chance (normal)" />
										<field type="Real" name="normal upgrade chance (heroic)" />
										<field type="Real" name="normal upgrade chance (legendary)" />
										<field type="Real" name="many upgrade chance (easy)" />
										<field type="Real" name="many upgrade chance (normal)" />
										<field type="Real" name="many upgrade chance (heroic)" />
										<field type="Real" name="many upgrade chance (legendary)" />
										<field type="Terminator" />
									</fields>
								</character_placement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vitality properties">
						<block name="character_vitality_block" maxCount="1" display="character_vitality_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_vitality_block_fields size="112" sizeIdentifer="sizeof(struct character_vitality_properties)" fieldCount="32">
									<fields>
										<field type="LongFlags" name="vitality flags">
											<definition count="1">
												<entry>unused</entry>
											</definition>
										</field>
										<field type="Real" name="normal body vitality" help="maximum body vitality of our unit" />
										<field type="Real" name="normal shield vitality" help="maximum shield vitality of our unit" />
										<field type="Real" name="legendary body vitality" help="maximum body vitality of our unit (on legendary)" />
										<field type="Real" name="legendary shield vitality" help="maximum shield vitality of our unit (on legendary)" />
										<field type="Real" name="body recharge fraction" help="fraction of body health that can be regained after damage" />
										<field type="Real" name="soft ping threshold (with shields)" help="damage necessary to trigger a soft ping when shields are up" />
										<field type="Real" name="soft ping threshold (no shields)" help="damage necessary to trigger a soft ping when shields are down" />
										<field type="Real" name="soft ping min interrupt time" help="minimum time before a soft ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="hard ping threshold (with shields)" help="damage necessary to trigger a hard ping when shields are up" />
										<field type="Real" name="hard ping threshold (no shields)" help="damage necessary to trigger a hard ping when shields are down" />
										<field type="Real" name="hard ping min interrupt time" help="minimum time before a hard ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="current damage decay delay" help="current damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="current damage decay time" help="amount of time it would take for 100% current damage to decay to 0" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="recent damage decay delay" help="recent damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="recent damage decay time" help="amount of time it would take for 100% recent damage to decay to 0" />
										<field type="Real" name="body recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="body recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="shield recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="shield recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="stun threshold" help="stun level that triggers the stunned state (currently, the 'stunned' behavior)" />
										<field type="RealBounds" name="stun time bounds" units="seconds" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="extended shield damage threshold" help="Amount of shield damage sustained before it is considered 'extended'" units="%" />
										<field type="Real" name="extended body damage threshold" help="Amount of body damage sustained before it is considered 'extended'" units="%" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="suicide radius" help="when I die and explode, I damage stuff within this distance of me." />
										<field type="Skip" name="" definition="8" />
										<field type="Terminator" />
									</fields>
								</character_vitality_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="perception properties">
						<block name="character_perception_block" maxCount="4" display="character_perception_block" flags="0" maxIdentifer="4" procFormat="True" version="1">
							<versions>
								<character_perception_block_fields size="52" sizeIdentifer="sizeof(struct character_perception_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="perception flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="max vision distance" help="maximum range of sight" units="world units" />
										<field type="Angle" name="central vision angle" help="horizontal angle within which we see targets out to our maximum range" units="degrees" />
										<field type="Angle" name="max vision angle" help="maximum horizontal angle within which we see targets at range" units="degrees" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="peripheral vision angle" help="maximum horizontal angle within which we can see targets out of the corner of our eye" units="degrees" />
										<field type="Real" name="peripheral distance" help="maximum range at which we can see targets our of the corner of our eye" units="world units" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="hearing distance" help="maximum range at which sounds can be heard" units="world units" />
										<field type="Real" name="notice projectile chance" help="random chance of noticing a dangerous enemy projectile (e.g. grenade)" units="[0,1]" />
										<field type="Real" name="notice vehicle chance" help="random chance of noticing a dangerous vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="combat perception time" help="time required to acknowledge a visible enemy when we are already in combat or searching for them" units="seconds" />
										<field type="Real" name="guard perception time" help="time required to acknowledge a visible enemy when we have been alerted" units="seconds" />
										<field type="Real" name="non-combat perception time" help="time required to acknowledge a visible enemy when we are not alerted" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="first ack. surprise distance" help="If a new prop is acknowledged within the given distance, surprise is registerd" units="world units" />
										<field type="Terminator" />
									</fields>
								</character_perception_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="retreat properties">
						<block name="character_retreat_block" maxCount="3" display="character_retreat_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_retreat_block_fields size="84" sizeIdentifer="sizeof(struct character_retreat_properties)" fieldCount="22">
									<fields>
										<field type="LongFlags" name="Retreat flags">
											<definition count="2">
												<entry>Zig-zag when fleeing</entry>
												<entry>Unused1</entry>
											</definition>
										</field>
										<field type="Real" name="Shield threshold" help="When shield vitality drops below given amount, retreat is triggered by low_shield_retreat_impulse" />
										<field type="Real" name="Scary target threshold" help="When confronting an enemy of over the given scariness, retreat is triggered by scary_target_retreat_impulse" />
										<field type="Real" name="Danger threshold" help="When perceived danger rises above the given threshold, retreat is triggered by danger_retreat_impulse" />
										<field type="Real" name="Proximity threshold" help="When enemy closer than given threshold, retreat is triggered by proximity_retreat_impulse" />
										<field type="UselessPad" name="" definition="16" />
										<field type="RealBounds" name="min/max forced cower time bounds" help="actor cowers for at least the given amount of time" />
										<field type="RealBounds" name="min/max cower timeout bounds" help="actor times out of cower after the given amount of time" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="proximity ambush threshold" help="If target reaches is within the given proximity, an ambush is triggered by the proximity ambush impulse" />
										<field type="Real" name="awareness ambush threshold" help="If target is less than threshold (0-1) aware of me, an ambush is triggered by the vulnerable enemy ambush impulse" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="leader dead retreat chance" help="If leader-dead-retreat-impulse is active, gives the chance that we will flee when our leader dies within 4 world units of us" />
										<field type="Real" name="peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when one of our peers (friend of the same race) dies within 4 world units of us" />
										<field type="Real" name="second peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when a second peer (friend of the same race) dies within 4 world units of us" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Angle" name="zig-zag angle" help="The angle from the intended destination direction that a zig-zag will cause" units="degrees" />
										<field type="Real" name="zig-zag period" help="How long it takes to zig left and then zag right." units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="retreat grenade chance" help="The likelihood of throwing down a grenade to cover our retreat" />
										<field type="TagReference" name="backup weapon" help="If I want to flee and I don't have flee animations with my current weapon, throw it away and try a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</character_retreat_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="Look properties">
						<block name="character_look_block" maxCount="1" display="character_look_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_look_block_fields size="80" sizeIdentifer="sizeof(struct character_look_properties)" fieldCount="12">
									<fields>
										<field type="RealEulerAngles2D" name="maximum aiming deviation" help="how far we can turn our weapon" units="degrees" />
										<field type="RealEulerAngles2D" name="maximum looking deviation" help="how far we can turn our head" units="degrees" />
										<field type="Pad" name="" definition="16" />
										<field type="Angle" name="noncombat look delta L" help="how far we can turn our head left away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="noncombat look delta R" help="how far we can turn our head right away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="combat look delta L" help="how far we can turn our head left away from our aiming vector when in combat" units="degrees" />
										<field type="Angle" name="combat look delta R" help="how far we can turn our head right away from our aiming vector when in combat" units="degrees" />
										<field type="RealBounds" name="noncombat idle looking" help="rate at which we change look around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="noncombat idle aiming" help="rate at which we change aiming directions when looking around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="combat idle looking" help="rate at which we change look around randomly when searching or in combat" units="seconds" />
										<field type="RealBounds" name="combat idle aiming" help="rate at which we change aiming directions when looking around randomly when searching or in combat" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_look_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="Movement properties">
						<block name="character_movement_block" maxCount="1" display="character_movement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_movement_block_fields size="36" sizeIdentifer="sizeof(struct character_movement_properties)" fieldCount="15">
									<fields>
										<field type="LongFlags" name="movement flags">
											<definition count="7">
												<entry>danger crouch allow movement</entry>
												<entry>no side-step</entry>
												<entry>prefer to combar near friends</entry>
												<entry>hop (to cover path segements)</entry>
												<entry>perch</entry>
												<entry>has flying mode</entry>
												<entry>disallow crouch</entry>
											</definition>
										</field>
										<field type="Real" name="pathfinding radius" />
										<field type="Real" name="destination radius" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="dive grenade chance" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle leap min size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle leap max size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle smashable size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Enum" name="jump height">
											<definition count="8">
												<entry>NONE</entry>
												<entry>down</entry>
												<entry>step</entry>
												<entry>crouch</entry>
												<entry>stand</entry>
												<entry>storey</entry>
												<entry>tower</entry>
												<entry>infinite</entry>
											</definition>
										</field>
										<field type="LongFlags" name="movement hints">
											<definition count="16">
												<entry>vault step</entry>
												<entry>vault crouch</entry>
												<entry />
												<entry />
												<entry />
												<entry>mount step</entry>
												<entry>mount crouch</entry>
												<entry>mount stand</entry>
												<entry />
												<entry />
												<entry />
												<entry>hoist crouch</entry>
												<entry>hoist stand</entry>
												<entry />
												<entry />
												<entry />
											</definition>
										</field>
										<field type="Real" name="throttle scale" />
										<field type="Terminator" />
									</fields>
								</character_movement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="Engage properties">
						<block name="character_engage_block" maxCount="3" display="character_engage_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_engage_block_fields size="16" sizeIdentifer="sizeof(struct character_engage_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="flags">
											<definition count="3">
												<entry>engage perch</entry>
												<entry>fight constant movement</entry>
												<entry>flight fight constant movement</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="Crouch danger threshold" help="When danger rises above the threshold, the actor crouches" />
										<field type="Real" name="Stand danger threshold" help="When danger drops below this threshold, the actor can stand again." />
										<field type="Real" name="Fight danger move threshold" help="When danger goes above given level, this actor switches firing positions" />
										<field type="Terminator" />
									</fields>
								</character_engage_block_fields>
							</versions>
						</block>
					</field>
					<field type="Explanation" name="Danger Values" definition="Danger values can be found in the ai-globals section of the globals tag." />
					<field type="Block" name="Evasion properties">
						<block name="character_evasion_block" maxCount="3" display="character_evasion_block" flags="0" maxIdentifer="k_style_attitude_count" procPostprocess="True" procFormat="True" version="1">
							<versions>
								<character_evasion_block_fields size="20" sizeIdentifer="sizeof(struct character_evasion_properties)" fieldCount="8">
									<fields>
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Evasion danger threshold" help="Consider evading when immediate danger surpasses threshold" />
										<field type="Real" name="Evasion delay timer" help="Wait at least this delay between evasions" />
										<field type="Real" name="Evasion chance" help="If danger is above threshold, the chance that we will evade. Expressed as chance of evading within a 1 second time period" />
										<field type="Real" name="Evasion proximity threshold" help="If target is within given proximity, possibly evade" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="dive retreat chance" help="Chance of retreating (fleeing) after danger avoidance dive" />
										<field type="Terminator" />
									</fields>
								</character_evasion_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="Cover properties">
						<block name="character_cover_block" maxCount="3" display="character_cover_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_cover_block_fields size="64" sizeIdentifer="sizeof(struct character_cover_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="cover flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="hide behind cover time" help="how long we stay behind cover after seeking cover" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Cover vitality threshold" help="When vitality drops below this level, possibly trigger a cover" />
										<field type="Real" name="Cover shield fraction" help="trigger cover when shield drops below this fraction (low shield cover impulse must be enabled)" />
										<field type="Real" name="Cover check delay" help="amount of time I will wait before trying again after covering" />
										<field type="Real" name="Emerge from cover when shield fraction reaches threshold" help="Emerge from cover when shield fraction reaches threshold" />
										<field type="Real" name="Cover danger threshold" help="Danger must be this high to cover. At a danger level of 'danger threshold', the chance of seeking cover is the cover chance lower bound (below)" />
										<field type="Real" name="Danger upper threshold" help="At or above danger level of upper threshold, the chance of seeking cover is the cover chance upper bound (below)" />
										<field type="Explanation" name="Cover chance" definition="The Bounds on the chance of seeking cover.&#xA;The lower bound is valid when the danger is at 'danger threshold'&#xA;The upper bound is valid when the danger is at or above 'danger upper threshold'.&#xA;It is interpolated linearly everywhere in between.&#xA; All chances are expressed as 'chance of triggering cover in a 1 second period'." />
										<field type="RealBounds" name="Cover chance" help="Bounds on the chances of seeking cover." />
										<field type="Real" name="Proximity self-preserve" help="When the proximity_self_preservation impulse is enabled, triggers self-preservation when target within this distance" units="wus" />
										<field type="Real" name="Disallow cover distance" help="Disallow covering from visible target under the given distance away" units="world units" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="proximity melee distance" help="When self preserving from a target less than given distance, causes melee attack (assuming proximity_melee_impulse is enabled)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="unreachable enemy danger threshold" help="When danger from an unreachable enemy surpasses threshold, actor cover (assuming unreachable_enemy_cover impulse is enabled)" />
										<field type="Real" name="scary target threshold" help="When target is aware of me and surpasses the given scariness, self-preserve (scary_target_cover_impulse)" />
										<field type="Terminator" />
									</fields>
								</character_cover_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="search properties">
						<block name="character_search_block" maxCount="3" display="character_search_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_search_block_fields size="20" sizeIdentifer="sizeof(struct character_search_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Search flags">
											<definition count="2">
												<entry>crouch on investigate</entry>
												<entry>walk on pursuit</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="search time" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Uncover" definition="" />
										<field type="RealBounds" name="Uncover distance bounds" help="Distance of uncover point from target. Hard lower limit, soft upper limit." />
										<field type="Terminator" />
									</fields>
								</character_search_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="pre-search properties">
						<block name="character_presearch_block" maxCount="3" display="character_presearch_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="2">
							<versions>
								<presearch_fields_v1 size="20" sizeIdentifer="sizeof(character_presearch_properties_v1)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="Min/Max pre-search bounds" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="Max uncover distance" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v1>
								<presearch_fields_v2 size="36" sizeIdentifer="sizeof(struct character_presearch_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="min presearch time" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" units="seconds" />
										<field type="RealBounds" name="max presearch time" help="Presearch turns off after the given time" units="seconds" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="DEPRECATED" />
										<field type="RealBounds" name="min suppressing time" help="if the min suppressing time expires and the target is outside the min-certainty radius, suppressing fire turns off" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="weapons properties">
						<block name="character_weapons_block" maxCount="100" display="character_weapons_block" flags="0" maxIdentifer="100" procPostprocess="True" version="2">
							<versions>
								<weapon_fields_v1 size="204" sizeIdentifer="sizeof(character_weapon_properties_v1)" fieldCount="46">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="Real" name="maximum firing distance" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
										<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="RealBounds" name="desired combat range" units="world units" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
										<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
										<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
										<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
										<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
										<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
										<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
										<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
										<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
										<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Special Targeting" definition="" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="Explanation" name="Ballistic firing" definition="" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="Terminator" />
									</fields>
								</weapon_fields_v1>
								<weapon_fields_v2 size="224" sizeIdentifer="sizeof(struct character_weapon_properties)" fieldCount="52">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Combat ranges" definition="" />
										<field type="Real" name="maximum firing range" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="RealBounds" name="normal combat range" units="world units" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="RealBounds" name="timid combat range" units="world units" />
										<field type="RealBounds" name="aggressive combat range" units="world units" />
										<field type="Explanation" name="Ballistic Firing" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Accuracy" definition="Parameters control how accuracy changes over the duration of a series of bursts&#xA;Accuracy is an analog value between 0 and 1. At zero, the parameters of the first&#xA;firing-pattern block is used. At 1, the parameters in the second block is used. In&#xA;between, all the values are linearly interpolated" />
										<field type="RealBounds" name="normal accuracy bounds" help="Indicates starting and ending accuracies at normal difficulty" />
										<field type="Real" name="normal accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="heroic accuracy bounds" help="Indicates starting and ending accuracies at heroic difficulty" />
										<field type="Real" name="heroic accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="legendary accuracy bounds" help="Indicates starting and ending accuracies at legendary difficulty" />
										<field type="Real" name="legendary accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="48" />
										<field type="Block" name="firing patterns">
											<block name="character_firing_pattern_block" maxCount="2" display="character_firing_pattern_block" flags="0" maxIdentifer="2" procFormat="True" version="1">
												<versions>
													<character_firing_pattern_block_fields size="64" sizeIdentifer="sizeof(struct character_firing_pattern)" fieldCount="16">
														<fields>
															<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
															<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
															<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
															<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
															<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
															<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
															<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
															<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
															<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
															<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
															<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
															<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
															<field type="UselessPad" name="" definition="12" />
															<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
															<field type="Angle" name="maximum error angle" help="cap on the maximum angle by which we will miss target (restriction on burst origin radius" units="degrees" />
															<field type="Terminator" />
														</fields>
													</character_firing_pattern_block_fields>
												</versions>
											</block>
										</field>
										<field type="TagReference" name="weapon melee damage">
											<definition flags="0" groupTag="jpt!" />
										</field>
										<field type="Terminator" />
									</fields>
								</weapon_fields_v2>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="Block" name="grenades properties">
						<block name="character_grenades_block" maxCount="10" display="character_grenades_block" flags="0" maxIdentifer="10" procPostprocess="True" version="1">
							<versions>
								<character_grenades_block_fields size="60" sizeIdentifer="sizeof(struct character_grenade_properties)" fieldCount="21">
									<fields>
										<field type="LongFlags" name="grenades flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Enum" name="grenade type" help="type of grenades that we throw" isBlockName="True">
											<definition count="2">
												<entry>human fragmentation</entry>
												<entry>covenant plasma</entry>
											</definition>
										</field>
										<field type="Enum" name="trajectory type" help="how we throw our grenades">
											<definition count="3">
												<entry>toss</entry>
												<entry>lob</entry>
												<entry>bounce</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="ShortInteger" name="minimum enemy count" help="how many enemies must be within the radius of the grenade before we will consider throwing there" />
										<field type="Real" name="enemy radius" help="we consider enemies within this radius when determining where to throw" units="world units" />
										<field type="Real" name="grenade ideal velocity" help="how fast we LIKE to throw our grenades" units="world units per second" />
										<field type="Real" name="grenade velocity" help="the fastest we can possibly throw our grenades" units="world units per second" />
										<field type="RealBounds" name="grenade ranges" help="ranges within which we will consider throwing a grenade" units="world units" />
										<field type="Real" name="collateral damage radius" help="we won't throw if there are friendlies around our target within this range" units="world units" />
										<field type="RealFraction" name="grenade chance" help="how likely we are to throw a grenade in one second" units="[0,1]" />
										<field type="Real" name="grenade throw delay" help="How long we have to wait after throwing a grenade before we can throw another one" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="grenade uncover chance" help="how likely we are to throw a grenade to flush out a target in one second" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="anti-vehicle grenade chance" help="how likely we are to throw a grenade against a vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Grenade drop when killed" definition="" />
										<field type="ShortIntegerBounds" name="grenade count" help="number of grenades that we start with" />
										<field type="Real" name="dont drop grenades chance" help="how likely we are not to drop any grenades when we die, even if we still have some" units="[0,1]" />
										<field type="Terminator" />
									</fields>
								</character_grenades_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="charge properties">
						<block name="character_charge_block" maxCount="3" display="character_charge_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="4">
							<versions>
								<charge_fields_v1 size="40" sizeIdentifer="sizeof(character_charge_properties_v1)" fieldCount="10">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v1>
								<charge_fields_v2 size="44" sizeIdentifer="sizeof(character_charge_properties_v2)" fieldCount="11">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v2>
								<charge_fields_v3 size="48" sizeIdentifer="sizeof(character_charge_properties_v3)" fieldCount="12">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v3>
								<charge_fields_v4 size="72" sizeIdentifer="sizeof(struct character_charge_properties)" fieldCount="16">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="2">
												<entry>offhand melee allowed</entry>
												<entry>berserk whenever charge</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee chance" help="chance of initiating a melee within a 1 second period" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" help="don't attempt again before given time since last melee" units="seconds" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Real" name="melee delay timer" help="time between melee leaps" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="TagReference" name="berserk weapon" help="when I berserk, I pull out a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</charge_fields_v4>
							</versions>
						</block>
					</field>
					<field type="Block" name="ready properties">
						<block name="character_ready_block" maxCount="3" display="character_ready_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_ready_block_fields size="8" sizeIdentifer="sizeof(struct character_ready_properties)" fieldCount="2">
									<fields>
										<field type="RealBounds" name="ready time bounds" help="Character will pause for given time before engaging threat" />
										<field type="Terminator" />
									</fields>
								</character_ready_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vehicle properties">
						<block name="character_vehicle_block" maxCount="100" display="character_vehicle_block" flags="0" maxIdentifer="100" version="2">
							<versions>
								<vehicle_fields_v1 size="128" sizeIdentifer="sizeof(character_vehicle_properties_v1)" fieldCount="42">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="DEPRECATED (ai strafing abort range)" help="(All vehicles) Distance at which charge will be aborted" />
										<field type="Real" name="ai avoidance distance" help="(Banshee, Sentinels, Dropships) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v1>
								<vehicle_fields_v2 size="196" sizeIdentifer="sizeof(struct character_vehicle_properties)" fieldCount="60">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="TagReference" name="style" isBlockName="True">
											<definition flags="0" groupTag="styl" />
										</field>
										<field type="UselessPad" name="" definition="32" />
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>passengers adopt original squad</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican, Ghost) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="Real" name="ai avoidance distance" help="(Banshee-style) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai min urgency" help="(Banshees)The minimum urgency with which a turn can be made (urgency = percent of maximum steering delta)" units="[0-1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="Real" name="ai throttle blend" help="(dropships, sentinels) The degree of throttle blending between one tick and the next (0 = no blending)" units="(0-1)" />
										<field type="Real" name="theoretical max speed" help="(dropships, warthogs, ghosts) About how fast I can go." units="wu/s" />
										<field type="Real" name="error scale" help="(dropships, warthogs) scale on the difference between desired and actual speed, applied to throttle" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Combat" definition="" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge tight angle distance" help="(All vehicles) The distance at which the tight angle criterion is used for deciding to vehicle charge" />
										<field type="Real" name="ai charge tight angle" help="(All vehicles) Angle cosine within which the target must be when target is closer than tight angle distance in order to charge" units="[0-1]" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="vehicle ram timeout" help="The ram behavior stops after a maximum of the given number of seconds" />
										<field type="Real" name="ram paralysis time" help="The ram behavior freezes the vehicle for a given number of seconds after performing the ram" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="ai cover damage threshold" help="(All vehicles) Trigger a cover when recent damage is above given threshold (damage_vehicle_cover impulse)" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="Real" name="ai cover min boost distance" help="(All vehicles) Boosting allowed when distance to cover destination is greater then this." />
										<field type="Real" name="turtling recent damage threshold" help="If vehicle turtling behavior is enabled, turtling is initiated if 'recent damage' surpasses the given threshold" units="%" />
										<field type="Real" name="turtling min time" help="If the vehicle turtling behavior is enabled, turtling occurs for at least the given time" units="seconds" />
										<field type="Real" name="turtling timeout" help="The turtled state times out after the given number of seconds" units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="idle properties">
						<block name="character_idle_block" maxCount="3" display="character_idle_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_idle_block_fields size="12" sizeIdentifer="sizeof(struct character_idle_properties)" fieldCount="4">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="idle pose delay time" help="time range for delays between idle poses" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_idle_block_fields>
							</versions>
						</block>
					</field>
					<field type="Terminator" />
				</fields>
			</character_tag_v1>
			<character_tag_v2 size="340" sizeIdentifer="sizeof(struct character_definition_v2)" fieldCount="37">
				<fields>
					<field type="LongFlags" name="Character flags">
						<definition count="1">
							<entry>Flag1</entry>
						</definition>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="TagReference" name="parent character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="TagReference" name="unit">
						<definition flags="0" groupTag="unit" />
					</field>
					<field type="TagReference" name="style">
						<definition flags="0" groupTag="styl" />
					</field>
					<field type="UselessPad" name="" definition="16" />
					<field type="TagReference" name="major character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="StringId" name="model variant" />
					<field type="TagReference" name="creature" help="Creature reference for swarm characters ONLY">
						<definition flags="0" groupTag="crea" />
					</field>
					<field type="UselessPad" name="" definition="32" />
					<field type="Block" name="general properties">
						<block name="character_general_block" maxCount="1" display="character_general_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_general_block_fields size="12" sizeIdentifer="sizeof(struct character_general_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="general flags">
											<definition count="4">
												<entry>swarm</entry>
												<entry>flying</entry>
												<entry>dual wields</entry>
												<entry>uses gravemind</entry>
											</definition>
										</field>
										<field type="Enum" name="type">
											<definition count="20">
												<entry>elite</entry>
												<entry>jackal</entry>
												<entry>grunt</entry>
												<entry>hunter</entry>
												<entry>engineer</entry>
												<entry>assassin</entry>
												<entry>player</entry>
												<entry>marine</entry>
												<entry>crew</entry>
												<entry>combat_form</entry>
												<entry>infection_form</entry>
												<entry>carrier_form</entry>
												<entry>monitor</entry>
												<entry>sentinel</entry>
												<entry>none</entry>
												<entry>mounted_weapon</entry>
												<entry>brute</entry>
												<entry>prophet</entry>
												<entry>bugger</entry>
												<entry>juggernaut</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="UselessPad" name="" definition="100" />
										<field type="Real" name="scariness" help="the inherent scariness of the character" />
										<field type="Terminator" />
									</fields>
								</character_general_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vitality properties">
						<block name="character_vitality_block" maxCount="1" display="character_vitality_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_vitality_block_fields size="112" sizeIdentifer="sizeof(struct character_vitality_properties)" fieldCount="32">
									<fields>
										<field type="LongFlags" name="vitality flags">
											<definition count="1">
												<entry>unused</entry>
											</definition>
										</field>
										<field type="Real" name="normal body vitality" help="maximum body vitality of our unit" />
										<field type="Real" name="normal shield vitality" help="maximum shield vitality of our unit" />
										<field type="Real" name="legendary body vitality" help="maximum body vitality of our unit (on legendary)" />
										<field type="Real" name="legendary shield vitality" help="maximum shield vitality of our unit (on legendary)" />
										<field type="Real" name="body recharge fraction" help="fraction of body health that can be regained after damage" />
										<field type="Real" name="soft ping threshold (with shields)" help="damage necessary to trigger a soft ping when shields are up" />
										<field type="Real" name="soft ping threshold (no shields)" help="damage necessary to trigger a soft ping when shields are down" />
										<field type="Real" name="soft ping min interrupt time" help="minimum time before a soft ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="hard ping threshold (with shields)" help="damage necessary to trigger a hard ping when shields are up" />
										<field type="Real" name="hard ping threshold (no shields)" help="damage necessary to trigger a hard ping when shields are down" />
										<field type="Real" name="hard ping min interrupt time" help="minimum time before a hard ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="current damage decay delay" help="current damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="current damage decay time" help="amount of time it would take for 100% current damage to decay to 0" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="recent damage decay delay" help="recent damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="recent damage decay time" help="amount of time it would take for 100% recent damage to decay to 0" />
										<field type="Real" name="body recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="body recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="shield recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="shield recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="stun threshold" help="stun level that triggers the stunned state (currently, the 'stunned' behavior)" />
										<field type="RealBounds" name="stun time bounds" units="seconds" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="extended shield damage threshold" help="Amount of shield damage sustained before it is considered 'extended'" units="%" />
										<field type="Real" name="extended body damage threshold" help="Amount of body damage sustained before it is considered 'extended'" units="%" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="suicide radius" help="when I die and explode, I damage stuff within this distance of me." />
										<field type="Skip" name="" definition="8" />
										<field type="Terminator" />
									</fields>
								</character_vitality_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="placement properties">
						<block name="character_placement_block" maxCount="1" display="character_placement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_placement_block_fields size="52" sizeIdentifer="sizeof(struct character_placement_properties)" fieldCount="14">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="Real" name="few upgrade chance (easy)" />
										<field type="Real" name="few upgrade chance (normal)" />
										<field type="Real" name="few upgrade chance (heroic)" />
										<field type="Real" name="few upgrade chance (legendary)" />
										<field type="Real" name="normal upgrade chance (easy)" />
										<field type="Real" name="normal upgrade chance (normal)" />
										<field type="Real" name="normal upgrade chance (heroic)" />
										<field type="Real" name="normal upgrade chance (legendary)" />
										<field type="Real" name="many upgrade chance (easy)" />
										<field type="Real" name="many upgrade chance (normal)" />
										<field type="Real" name="many upgrade chance (heroic)" />
										<field type="Real" name="many upgrade chance (legendary)" />
										<field type="Terminator" />
									</fields>
								</character_placement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="perception properties">
						<block name="character_perception_block" maxCount="4" display="character_perception_block" flags="0" maxIdentifer="4" procFormat="True" version="1">
							<versions>
								<character_perception_block_fields size="52" sizeIdentifer="sizeof(struct character_perception_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="perception flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="max vision distance" help="maximum range of sight" units="world units" />
										<field type="Angle" name="central vision angle" help="horizontal angle within which we see targets out to our maximum range" units="degrees" />
										<field type="Angle" name="max vision angle" help="maximum horizontal angle within which we see targets at range" units="degrees" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="peripheral vision angle" help="maximum horizontal angle within which we can see targets out of the corner of our eye" units="degrees" />
										<field type="Real" name="peripheral distance" help="maximum range at which we can see targets our of the corner of our eye" units="world units" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="hearing distance" help="maximum range at which sounds can be heard" units="world units" />
										<field type="Real" name="notice projectile chance" help="random chance of noticing a dangerous enemy projectile (e.g. grenade)" units="[0,1]" />
										<field type="Real" name="notice vehicle chance" help="random chance of noticing a dangerous vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="combat perception time" help="time required to acknowledge a visible enemy when we are already in combat or searching for them" units="seconds" />
										<field type="Real" name="guard perception time" help="time required to acknowledge a visible enemy when we have been alerted" units="seconds" />
										<field type="Real" name="non-combat perception time" help="time required to acknowledge a visible enemy when we are not alerted" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="first ack. surprise distance" help="If a new prop is acknowledged within the given distance, surprise is registerd" units="world units" />
										<field type="Terminator" />
									</fields>
								</character_perception_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="look properties">
						<block name="character_look_block" maxCount="1" display="character_look_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_look_block_fields size="80" sizeIdentifer="sizeof(struct character_look_properties)" fieldCount="12">
									<fields>
										<field type="RealEulerAngles2D" name="maximum aiming deviation" help="how far we can turn our weapon" units="degrees" />
										<field type="RealEulerAngles2D" name="maximum looking deviation" help="how far we can turn our head" units="degrees" />
										<field type="Pad" name="" definition="16" />
										<field type="Angle" name="noncombat look delta L" help="how far we can turn our head left away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="noncombat look delta R" help="how far we can turn our head right away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="combat look delta L" help="how far we can turn our head left away from our aiming vector when in combat" units="degrees" />
										<field type="Angle" name="combat look delta R" help="how far we can turn our head right away from our aiming vector when in combat" units="degrees" />
										<field type="RealBounds" name="noncombat idle looking" help="rate at which we change look around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="noncombat idle aiming" help="rate at which we change aiming directions when looking around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="combat idle looking" help="rate at which we change look around randomly when searching or in combat" units="seconds" />
										<field type="RealBounds" name="combat idle aiming" help="rate at which we change aiming directions when looking around randomly when searching or in combat" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_look_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="movement properties">
						<block name="character_movement_block" maxCount="1" display="character_movement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_movement_block_fields size="36" sizeIdentifer="sizeof(struct character_movement_properties)" fieldCount="15">
									<fields>
										<field type="LongFlags" name="movement flags">
											<definition count="7">
												<entry>danger crouch allow movement</entry>
												<entry>no side-step</entry>
												<entry>prefer to combar near friends</entry>
												<entry>hop (to cover path segements)</entry>
												<entry>perch</entry>
												<entry>has flying mode</entry>
												<entry>disallow crouch</entry>
											</definition>
										</field>
										<field type="Real" name="pathfinding radius" />
										<field type="Real" name="destination radius" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="dive grenade chance" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle leap min size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle leap max size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle smashable size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Enum" name="jump height">
											<definition count="8">
												<entry>NONE</entry>
												<entry>down</entry>
												<entry>step</entry>
												<entry>crouch</entry>
												<entry>stand</entry>
												<entry>storey</entry>
												<entry>tower</entry>
												<entry>infinite</entry>
											</definition>
										</field>
										<field type="LongFlags" name="movement hints">
											<definition count="16">
												<entry>vault step</entry>
												<entry>vault crouch</entry>
												<entry />
												<entry />
												<entry />
												<entry>mount step</entry>
												<entry>mount crouch</entry>
												<entry>mount stand</entry>
												<entry />
												<entry />
												<entry />
												<entry>hoist crouch</entry>
												<entry>hoist stand</entry>
												<entry />
												<entry />
												<entry />
											</definition>
										</field>
										<field type="Real" name="throttle scale" />
										<field type="Terminator" />
									</fields>
								</character_movement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="swarm properties">
						<block name="character_swarm_block" maxCount="3" display="character_swarm_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_swarm_block_fields size="40" sizeIdentifer="sizeof(struct character_swarm_properties)" fieldCount="14">
									<fields>
										<field type="UselessPad" name="" definition="48" />
										<field type="ShortInteger" name="scatter killed count" help="After the given number of deaths, the swarm scatters" />
										<field type="Pad" name="" definition="2" />
										<field type="Real" name="scatter radius" help="the distance from the target that the swarm scatters" />
										<field type="Real" name="scatter time" help="amount of time to remain scattered" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="hound min distance" />
										<field type="Real" name="hound max distance" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="perlin offset scale" help="amount of randomness added to creature's throttle" units="[0-1]" />
										<field type="RealBounds" name="offset period" help="how fast the creature changes random offset to throttle" units="s" />
										<field type="Real" name="perlin idle movement threshold" help="a random offset lower then given threshold is made 0. (threshold of 1 = no movement)" units="[0-1]" />
										<field type="Real" name="perlin combat movement threshold" help="a random offset lower then given threshold is made 0. (threshold of 1 = no movement)" units="[0-1]" />
										<field type="Terminator" />
									</fields>
								</character_swarm_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="36" />
					<field type="Block" name="ready properties">
						<block name="character_ready_block" maxCount="3" display="character_ready_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_ready_block_fields size="8" sizeIdentifer="sizeof(struct character_ready_properties)" fieldCount="2">
									<fields>
										<field type="RealBounds" name="ready time bounds" help="Character will pause for given time before engaging threat" />
										<field type="Terminator" />
									</fields>
								</character_ready_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="engage properties">
						<block name="character_engage_block" maxCount="3" display="character_engage_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_engage_block_fields size="16" sizeIdentifer="sizeof(struct character_engage_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="flags">
											<definition count="3">
												<entry>engage perch</entry>
												<entry>fight constant movement</entry>
												<entry>flight fight constant movement</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="Crouch danger threshold" help="When danger rises above the threshold, the actor crouches" />
										<field type="Real" name="Stand danger threshold" help="When danger drops below this threshold, the actor can stand again." />
										<field type="Real" name="Fight danger move threshold" help="When danger goes above given level, this actor switches firing positions" />
										<field type="Terminator" />
									</fields>
								</character_engage_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="charge properties">
						<block name="character_charge_block" maxCount="3" display="character_charge_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="4">
							<versions>
								<charge_fields_v1 size="40" sizeIdentifer="sizeof(character_charge_properties_v1)" fieldCount="10">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v1>
								<charge_fields_v2 size="44" sizeIdentifer="sizeof(character_charge_properties_v2)" fieldCount="11">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v2>
								<charge_fields_v3 size="48" sizeIdentifer="sizeof(character_charge_properties_v3)" fieldCount="12">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v3>
								<charge_fields_v4 size="72" sizeIdentifer="sizeof(struct character_charge_properties)" fieldCount="16">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="2">
												<entry>offhand melee allowed</entry>
												<entry>berserk whenever charge</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee chance" help="chance of initiating a melee within a 1 second period" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" help="don't attempt again before given time since last melee" units="seconds" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Real" name="melee delay timer" help="time between melee leaps" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="TagReference" name="berserk weapon" help="when I berserk, I pull out a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</charge_fields_v4>
							</versions>
						</block>
					</field>
					<field type="Explanation" name="Danger Values" definition="Danger values can be found in the ai-globals section of the globals tag." />
					<field type="Block" name="evasion properties">
						<block name="character_evasion_block" maxCount="3" display="character_evasion_block" flags="0" maxIdentifer="k_style_attitude_count" procPostprocess="True" procFormat="True" version="1">
							<versions>
								<character_evasion_block_fields size="20" sizeIdentifer="sizeof(struct character_evasion_properties)" fieldCount="8">
									<fields>
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Evasion danger threshold" help="Consider evading when immediate danger surpasses threshold" />
										<field type="Real" name="Evasion delay timer" help="Wait at least this delay between evasions" />
										<field type="Real" name="Evasion chance" help="If danger is above threshold, the chance that we will evade. Expressed as chance of evading within a 1 second time period" />
										<field type="Real" name="Evasion proximity threshold" help="If target is within given proximity, possibly evade" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="dive retreat chance" help="Chance of retreating (fleeing) after danger avoidance dive" />
										<field type="Terminator" />
									</fields>
								</character_evasion_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="cover properties">
						<block name="character_cover_block" maxCount="3" display="character_cover_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_cover_block_fields size="64" sizeIdentifer="sizeof(struct character_cover_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="cover flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="hide behind cover time" help="how long we stay behind cover after seeking cover" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Cover vitality threshold" help="When vitality drops below this level, possibly trigger a cover" />
										<field type="Real" name="Cover shield fraction" help="trigger cover when shield drops below this fraction (low shield cover impulse must be enabled)" />
										<field type="Real" name="Cover check delay" help="amount of time I will wait before trying again after covering" />
										<field type="Real" name="Emerge from cover when shield fraction reaches threshold" help="Emerge from cover when shield fraction reaches threshold" />
										<field type="Real" name="Cover danger threshold" help="Danger must be this high to cover. At a danger level of 'danger threshold', the chance of seeking cover is the cover chance lower bound (below)" />
										<field type="Real" name="Danger upper threshold" help="At or above danger level of upper threshold, the chance of seeking cover is the cover chance upper bound (below)" />
										<field type="Explanation" name="Cover chance" definition="The Bounds on the chance of seeking cover.&#xA;The lower bound is valid when the danger is at 'danger threshold'&#xA;The upper bound is valid when the danger is at or above 'danger upper threshold'.&#xA;It is interpolated linearly everywhere in between.&#xA; All chances are expressed as 'chance of triggering cover in a 1 second period'." />
										<field type="RealBounds" name="Cover chance" help="Bounds on the chances of seeking cover." />
										<field type="Real" name="Proximity self-preserve" help="When the proximity_self_preservation impulse is enabled, triggers self-preservation when target within this distance" units="wus" />
										<field type="Real" name="Disallow cover distance" help="Disallow covering from visible target under the given distance away" units="world units" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="proximity melee distance" help="When self preserving from a target less than given distance, causes melee attack (assuming proximity_melee_impulse is enabled)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="unreachable enemy danger threshold" help="When danger from an unreachable enemy surpasses threshold, actor cover (assuming unreachable_enemy_cover impulse is enabled)" />
										<field type="Real" name="scary target threshold" help="When target is aware of me and surpasses the given scariness, self-preserve (scary_target_cover_impulse)" />
										<field type="Terminator" />
									</fields>
								</character_cover_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="retreat properties">
						<block name="character_retreat_block" maxCount="3" display="character_retreat_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_retreat_block_fields size="84" sizeIdentifer="sizeof(struct character_retreat_properties)" fieldCount="22">
									<fields>
										<field type="LongFlags" name="Retreat flags">
											<definition count="2">
												<entry>Zig-zag when fleeing</entry>
												<entry>Unused1</entry>
											</definition>
										</field>
										<field type="Real" name="Shield threshold" help="When shield vitality drops below given amount, retreat is triggered by low_shield_retreat_impulse" />
										<field type="Real" name="Scary target threshold" help="When confronting an enemy of over the given scariness, retreat is triggered by scary_target_retreat_impulse" />
										<field type="Real" name="Danger threshold" help="When perceived danger rises above the given threshold, retreat is triggered by danger_retreat_impulse" />
										<field type="Real" name="Proximity threshold" help="When enemy closer than given threshold, retreat is triggered by proximity_retreat_impulse" />
										<field type="UselessPad" name="" definition="16" />
										<field type="RealBounds" name="min/max forced cower time bounds" help="actor cowers for at least the given amount of time" />
										<field type="RealBounds" name="min/max cower timeout bounds" help="actor times out of cower after the given amount of time" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="proximity ambush threshold" help="If target reaches is within the given proximity, an ambush is triggered by the proximity ambush impulse" />
										<field type="Real" name="awareness ambush threshold" help="If target is less than threshold (0-1) aware of me, an ambush is triggered by the vulnerable enemy ambush impulse" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="leader dead retreat chance" help="If leader-dead-retreat-impulse is active, gives the chance that we will flee when our leader dies within 4 world units of us" />
										<field type="Real" name="peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when one of our peers (friend of the same race) dies within 4 world units of us" />
										<field type="Real" name="second peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when a second peer (friend of the same race) dies within 4 world units of us" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Angle" name="zig-zag angle" help="The angle from the intended destination direction that a zig-zag will cause" units="degrees" />
										<field type="Real" name="zig-zag period" help="How long it takes to zig left and then zag right." units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="retreat grenade chance" help="The likelihood of throwing down a grenade to cover our retreat" />
										<field type="TagReference" name="backup weapon" help="If I want to flee and I don't have flee animations with my current weapon, throw it away and try a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</character_retreat_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="search properties">
						<block name="character_search_block" maxCount="3" display="character_search_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_search_block_fields size="20" sizeIdentifer="sizeof(struct character_search_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Search flags">
											<definition count="2">
												<entry>crouch on investigate</entry>
												<entry>walk on pursuit</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="search time" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Uncover" definition="" />
										<field type="RealBounds" name="Uncover distance bounds" help="Distance of uncover point from target. Hard lower limit, soft upper limit." />
										<field type="Terminator" />
									</fields>
								</character_search_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="pre-search properties">
						<block name="character_presearch_block" maxCount="3" display="character_presearch_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="2">
							<versions>
								<presearch_fields_v1 size="20" sizeIdentifer="sizeof(character_presearch_properties_v1)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="Min/Max pre-search bounds" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="Max uncover distance" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v1>
								<presearch_fields_v2 size="36" sizeIdentifer="sizeof(struct character_presearch_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="min presearch time" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" units="seconds" />
										<field type="RealBounds" name="max presearch time" help="Presearch turns off after the given time" units="seconds" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="DEPRECATED" />
										<field type="RealBounds" name="min suppressing time" help="if the min suppressing time expires and the target is outside the min-certainty radius, suppressing fire turns off" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="idle properties">
						<block name="character_idle_block" maxCount="3" display="character_idle_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_idle_block_fields size="12" sizeIdentifer="sizeof(struct character_idle_properties)" fieldCount="4">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="idle pose delay time" help="time range for delays between idle poses" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_idle_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vocalization properties">
						<block name="character_vocalization_block" maxCount="1" display="character_vocalization_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_vocalization_block_fields size="8" sizeIdentifer="sizeof(struct character_vocalization_properties)" fieldCount="3">
									<fields>
										<field type="Real" name="look comment time" help="How long does the player look at an AI before the AI responds?" units="s" />
										<field type="Real" name="look long comment time" help="How long does the player look at the AI before he responds with his 'long look' comment?" units="s" />
										<field type="Terminator" />
									</fields>
								</character_vocalization_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="36" />
					<field type="Block" name="weapons properties" attributeGroup="sort">
						<block name="character_weapons_block" maxCount="100" display="character_weapons_block" flags="0" maxIdentifer="100" procPostprocess="True" version="2">
							<versions>
								<weapon_fields_v1 size="204" sizeIdentifer="sizeof(character_weapon_properties_v1)" fieldCount="46">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="Real" name="maximum firing distance" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
										<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="RealBounds" name="desired combat range" units="world units" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
										<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
										<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
										<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
										<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
										<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
										<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
										<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
										<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
										<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Special Targeting" definition="" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="Explanation" name="Ballistic firing" definition="" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="Terminator" />
									</fields>
								</weapon_fields_v1>
								<weapon_fields_v2 size="224" sizeIdentifer="sizeof(struct character_weapon_properties)" fieldCount="52">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Combat ranges" definition="" />
										<field type="Real" name="maximum firing range" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="RealBounds" name="normal combat range" units="world units" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="RealBounds" name="timid combat range" units="world units" />
										<field type="RealBounds" name="aggressive combat range" units="world units" />
										<field type="Explanation" name="Ballistic Firing" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Accuracy" definition="Parameters control how accuracy changes over the duration of a series of bursts&#xA;Accuracy is an analog value between 0 and 1. At zero, the parameters of the first&#xA;firing-pattern block is used. At 1, the parameters in the second block is used. In&#xA;between, all the values are linearly interpolated" />
										<field type="RealBounds" name="normal accuracy bounds" help="Indicates starting and ending accuracies at normal difficulty" />
										<field type="Real" name="normal accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="heroic accuracy bounds" help="Indicates starting and ending accuracies at heroic difficulty" />
										<field type="Real" name="heroic accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="legendary accuracy bounds" help="Indicates starting and ending accuracies at legendary difficulty" />
										<field type="Real" name="legendary accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="48" />
										<field type="Block" name="firing patterns">
											<block name="character_firing_pattern_block" maxCount="2" display="character_firing_pattern_block" flags="0" maxIdentifer="2" procFormat="True" version="1">
												<versions>
													<character_firing_pattern_block_fields size="64" sizeIdentifer="sizeof(struct character_firing_pattern)" fieldCount="16">
														<fields>
															<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
															<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
															<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
															<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
															<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
															<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
															<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
															<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
															<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
															<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
															<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
															<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
															<field type="UselessPad" name="" definition="12" />
															<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
															<field type="Angle" name="maximum error angle" help="cap on the maximum angle by which we will miss target (restriction on burst origin radius" units="degrees" />
															<field type="Terminator" />
														</fields>
													</character_firing_pattern_block_fields>
												</versions>
											</block>
										</field>
										<field type="TagReference" name="weapon melee damage">
											<definition flags="0" groupTag="jpt!" />
										</field>
										<field type="Terminator" />
									</fields>
								</weapon_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="firing pattern properties" attributeGroup="sort">
						<block name="character_firing_pattern_properties_block" maxCount="100" display="character_firing_pattern_properties_block" flags="0" maxIdentifer="100" version="1">
							<versions>
								<character_firing_pattern_properties_block_fields size="28" sizeIdentifer="sizeof(struct character_firing_pattern_properties)" fieldCount="4">
									<fields>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="Block" name="firing patterns">
											<block name="character_firing_pattern_block" maxCount="2" display="character_firing_pattern_block" flags="0" maxIdentifer="2" procFormat="True" version="1">
												<versions>
													<character_firing_pattern_block_fields size="64" sizeIdentifer="sizeof(struct character_firing_pattern)" fieldCount="16">
														<fields>
															<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
															<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
															<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
															<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
															<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
															<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
															<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
															<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
															<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
															<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
															<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
															<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
															<field type="UselessPad" name="" definition="12" />
															<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
															<field type="Angle" name="maximum error angle" help="cap on the maximum angle by which we will miss target (restriction on burst origin radius" units="degrees" />
															<field type="Terminator" />
														</fields>
													</character_firing_pattern_block_fields>
												</versions>
											</block>
										</field>
										<field type="Terminator" />
									</fields>
								</character_firing_pattern_properties_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="Block" name="grenades properties" attributeGroup="sort">
						<block name="character_grenades_block" maxCount="10" display="character_grenades_block" flags="0" maxIdentifer="10" procPostprocess="True" version="1">
							<versions>
								<character_grenades_block_fields size="60" sizeIdentifer="sizeof(struct character_grenade_properties)" fieldCount="21">
									<fields>
										<field type="LongFlags" name="grenades flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Enum" name="grenade type" help="type of grenades that we throw" isBlockName="True">
											<definition count="2">
												<entry>human fragmentation</entry>
												<entry>covenant plasma</entry>
											</definition>
										</field>
										<field type="Enum" name="trajectory type" help="how we throw our grenades">
											<definition count="3">
												<entry>toss</entry>
												<entry>lob</entry>
												<entry>bounce</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="ShortInteger" name="minimum enemy count" help="how many enemies must be within the radius of the grenade before we will consider throwing there" />
										<field type="Real" name="enemy radius" help="we consider enemies within this radius when determining where to throw" units="world units" />
										<field type="Real" name="grenade ideal velocity" help="how fast we LIKE to throw our grenades" units="world units per second" />
										<field type="Real" name="grenade velocity" help="the fastest we can possibly throw our grenades" units="world units per second" />
										<field type="RealBounds" name="grenade ranges" help="ranges within which we will consider throwing a grenade" units="world units" />
										<field type="Real" name="collateral damage radius" help="we won't throw if there are friendlies around our target within this range" units="world units" />
										<field type="RealFraction" name="grenade chance" help="how likely we are to throw a grenade in one second" units="[0,1]" />
										<field type="Real" name="grenade throw delay" help="How long we have to wait after throwing a grenade before we can throw another one" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="grenade uncover chance" help="how likely we are to throw a grenade to flush out a target in one second" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="anti-vehicle grenade chance" help="how likely we are to throw a grenade against a vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Grenade drop when killed" definition="" />
										<field type="ShortIntegerBounds" name="grenade count" help="number of grenades that we start with" />
										<field type="Real" name="dont drop grenades chance" help="how likely we are not to drop any grenades when we die, even if we still have some" units="[0,1]" />
										<field type="Terminator" />
									</fields>
								</character_grenades_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="Block" name="vehicle properties" attributeGroup="sort">
						<block name="character_vehicle_block" maxCount="100" display="character_vehicle_block" flags="0" maxIdentifer="100" version="2">
							<versions>
								<vehicle_fields_v1 size="128" sizeIdentifer="sizeof(character_vehicle_properties_v1)" fieldCount="42">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="DEPRECATED (ai strafing abort range)" help="(All vehicles) Distance at which charge will be aborted" />
										<field type="Real" name="ai avoidance distance" help="(Banshee, Sentinels, Dropships) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v1>
								<vehicle_fields_v2 size="196" sizeIdentifer="sizeof(struct character_vehicle_properties)" fieldCount="60">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="TagReference" name="style" isBlockName="True">
											<definition flags="0" groupTag="styl" />
										</field>
										<field type="UselessPad" name="" definition="32" />
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>passengers adopt original squad</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican, Ghost) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="Real" name="ai avoidance distance" help="(Banshee-style) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai min urgency" help="(Banshees)The minimum urgency with which a turn can be made (urgency = percent of maximum steering delta)" units="[0-1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="Real" name="ai throttle blend" help="(dropships, sentinels) The degree of throttle blending between one tick and the next (0 = no blending)" units="(0-1)" />
										<field type="Real" name="theoretical max speed" help="(dropships, warthogs, ghosts) About how fast I can go." units="wu/s" />
										<field type="Real" name="error scale" help="(dropships, warthogs) scale on the difference between desired and actual speed, applied to throttle" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Combat" definition="" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge tight angle distance" help="(All vehicles) The distance at which the tight angle criterion is used for deciding to vehicle charge" />
										<field type="Real" name="ai charge tight angle" help="(All vehicles) Angle cosine within which the target must be when target is closer than tight angle distance in order to charge" units="[0-1]" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="vehicle ram timeout" help="The ram behavior stops after a maximum of the given number of seconds" />
										<field type="Real" name="ram paralysis time" help="The ram behavior freezes the vehicle for a given number of seconds after performing the ram" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="ai cover damage threshold" help="(All vehicles) Trigger a cover when recent damage is above given threshold (damage_vehicle_cover impulse)" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="Real" name="ai cover min boost distance" help="(All vehicles) Boosting allowed when distance to cover destination is greater then this." />
										<field type="Real" name="turtling recent damage threshold" help="If vehicle turtling behavior is enabled, turtling is initiated if 'recent damage' surpasses the given threshold" units="%" />
										<field type="Real" name="turtling min time" help="If the vehicle turtling behavior is enabled, turtling occurs for at least the given time" units="seconds" />
										<field type="Real" name="turtling timeout" help="The turtled state times out after the given number of seconds" units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Terminator" />
				</fields>
			</character_tag_v2>
			<character_tag_v3 size="372" sizeIdentifer="sizeof(struct character_definition)" fieldCount="40">
				<fields>
					<field type="LongFlags" name="Character flags">
						<definition count="1">
							<entry>Flag1</entry>
						</definition>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="TagReference" name="parent character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="TagReference" name="unit">
						<definition flags="0" groupTag="unit" />
					</field>
					<field type="TagReference" name="creature" help="Creature reference for swarm characters ONLY">
						<definition flags="0" groupTag="crea" />
					</field>
					<field type="TagReference" name="style">
						<definition flags="0" groupTag="styl" />
					</field>
					<field type="UselessPad" name="" definition="16" />
					<field type="TagReference" name="major character">
						<definition flags="0" groupTag="char" />
					</field>
					<field type="UselessPad" name="" definition="12" />
					<field type="Block" name="variants">
						<block name="character_variants_block" maxCount="64" display="character_variants_block" flags="0" maxIdentifer="k_maximum_variants_per_model" version="1">
							<versions>
								<character_variants_block_fields size="12" sizeIdentifer="sizeof(struct character_variant)" fieldCount="5">
									<fields>
										<field type="StringId" name="variant name" isBlockName="True" />
										<field type="ShortInteger" name="variant index" isReadonly="True" />
										<field type="Pad" name="" definition="2" />
										<field type="StringId" name="variant designator" isReadonly="True" />
										<field type="Terminator" />
									</fields>
								</character_variants_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="36" />
					<field type="Block" name="general properties">
						<block name="character_general_block" maxCount="1" display="character_general_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_general_block_fields size="12" sizeIdentifer="sizeof(struct character_general_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="general flags">
											<definition count="4">
												<entry>swarm</entry>
												<entry>flying</entry>
												<entry>dual wields</entry>
												<entry>uses gravemind</entry>
											</definition>
										</field>
										<field type="Enum" name="type">
											<definition count="20">
												<entry>elite</entry>
												<entry>jackal</entry>
												<entry>grunt</entry>
												<entry>hunter</entry>
												<entry>engineer</entry>
												<entry>assassin</entry>
												<entry>player</entry>
												<entry>marine</entry>
												<entry>crew</entry>
												<entry>combat_form</entry>
												<entry>infection_form</entry>
												<entry>carrier_form</entry>
												<entry>monitor</entry>
												<entry>sentinel</entry>
												<entry>none</entry>
												<entry>mounted_weapon</entry>
												<entry>brute</entry>
												<entry>prophet</entry>
												<entry>bugger</entry>
												<entry>juggernaut</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="UselessPad" name="" definition="100" />
										<field type="Real" name="scariness" help="the inherent scariness of the character" />
										<field type="Terminator" />
									</fields>
								</character_general_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vitality properties">
						<block name="character_vitality_block" maxCount="1" display="character_vitality_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_vitality_block_fields size="112" sizeIdentifer="sizeof(struct character_vitality_properties)" fieldCount="32">
									<fields>
										<field type="LongFlags" name="vitality flags">
											<definition count="1">
												<entry>unused</entry>
											</definition>
										</field>
										<field type="Real" name="normal body vitality" help="maximum body vitality of our unit" />
										<field type="Real" name="normal shield vitality" help="maximum shield vitality of our unit" />
										<field type="Real" name="legendary body vitality" help="maximum body vitality of our unit (on legendary)" />
										<field type="Real" name="legendary shield vitality" help="maximum shield vitality of our unit (on legendary)" />
										<field type="Real" name="body recharge fraction" help="fraction of body health that can be regained after damage" />
										<field type="Real" name="soft ping threshold (with shields)" help="damage necessary to trigger a soft ping when shields are up" />
										<field type="Real" name="soft ping threshold (no shields)" help="damage necessary to trigger a soft ping when shields are down" />
										<field type="Real" name="soft ping min interrupt time" help="minimum time before a soft ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="hard ping threshold (with shields)" help="damage necessary to trigger a hard ping when shields are up" />
										<field type="Real" name="hard ping threshold (no shields)" help="damage necessary to trigger a hard ping when shields are down" />
										<field type="Real" name="hard ping min interrupt time" help="minimum time before a hard ping can be interrupted" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="current damage decay delay" help="current damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="current damage decay time" help="amount of time it would take for 100% current damage to decay to 0" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="recent damage decay delay" help="recent damage begins to fall after a time delay has passed since last the damage" />
										<field type="Real" name="recent damage decay time" help="amount of time it would take for 100% recent damage to decay to 0" />
										<field type="Real" name="body recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="body recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="shield recharge delay time" help="amount of time delay before a shield begins to recharge" />
										<field type="Real" name="shield recharge time" help="amount of time for shields to recharge completely" />
										<field type="Real" name="stun threshold" help="stun level that triggers the stunned state (currently, the 'stunned' behavior)" />
										<field type="RealBounds" name="stun time bounds" units="seconds" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="extended shield damage threshold" help="Amount of shield damage sustained before it is considered 'extended'" units="%" />
										<field type="Real" name="extended body damage threshold" help="Amount of body damage sustained before it is considered 'extended'" units="%" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="suicide radius" help="when I die and explode, I damage stuff within this distance of me." />
										<field type="Skip" name="" definition="8" />
										<field type="Terminator" />
									</fields>
								</character_vitality_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="placement properties">
						<block name="character_placement_block" maxCount="1" display="character_placement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_placement_block_fields size="52" sizeIdentifer="sizeof(struct character_placement_properties)" fieldCount="14">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="Real" name="few upgrade chance (easy)" />
										<field type="Real" name="few upgrade chance (normal)" />
										<field type="Real" name="few upgrade chance (heroic)" />
										<field type="Real" name="few upgrade chance (legendary)" />
										<field type="Real" name="normal upgrade chance (easy)" />
										<field type="Real" name="normal upgrade chance (normal)" />
										<field type="Real" name="normal upgrade chance (heroic)" />
										<field type="Real" name="normal upgrade chance (legendary)" />
										<field type="Real" name="many upgrade chance (easy)" />
										<field type="Real" name="many upgrade chance (normal)" />
										<field type="Real" name="many upgrade chance (heroic)" />
										<field type="Real" name="many upgrade chance (legendary)" />
										<field type="Terminator" />
									</fields>
								</character_placement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="perception properties">
						<block name="character_perception_block" maxCount="4" display="character_perception_block" flags="0" maxIdentifer="4" procFormat="True" version="1">
							<versions>
								<character_perception_block_fields size="52" sizeIdentifer="sizeof(struct character_perception_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="perception flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="max vision distance" help="maximum range of sight" units="world units" />
										<field type="Angle" name="central vision angle" help="horizontal angle within which we see targets out to our maximum range" units="degrees" />
										<field type="Angle" name="max vision angle" help="maximum horizontal angle within which we see targets at range" units="degrees" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="peripheral vision angle" help="maximum horizontal angle within which we can see targets out of the corner of our eye" units="degrees" />
										<field type="Real" name="peripheral distance" help="maximum range at which we can see targets our of the corner of our eye" units="world units" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="hearing distance" help="maximum range at which sounds can be heard" units="world units" />
										<field type="Real" name="notice projectile chance" help="random chance of noticing a dangerous enemy projectile (e.g. grenade)" units="[0,1]" />
										<field type="Real" name="notice vehicle chance" help="random chance of noticing a dangerous vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="combat perception time" help="time required to acknowledge a visible enemy when we are already in combat or searching for them" units="seconds" />
										<field type="Real" name="guard perception time" help="time required to acknowledge a visible enemy when we have been alerted" units="seconds" />
										<field type="Real" name="non-combat perception time" help="time required to acknowledge a visible enemy when we are not alerted" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="first ack. surprise distance" help="If a new prop is acknowledged within the given distance, surprise is registerd" units="world units" />
										<field type="Terminator" />
									</fields>
								</character_perception_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="look properties">
						<block name="character_look_block" maxCount="1" display="character_look_block" flags="0" maxIdentifer="1" procPostprocess="True" version="1">
							<versions>
								<character_look_block_fields size="80" sizeIdentifer="sizeof(struct character_look_properties)" fieldCount="12">
									<fields>
										<field type="RealEulerAngles2D" name="maximum aiming deviation" help="how far we can turn our weapon" units="degrees" />
										<field type="RealEulerAngles2D" name="maximum looking deviation" help="how far we can turn our head" units="degrees" />
										<field type="Pad" name="" definition="16" />
										<field type="Angle" name="noncombat look delta L" help="how far we can turn our head left away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="noncombat look delta R" help="how far we can turn our head right away from our aiming vector when not in combat" units="degrees" />
										<field type="Angle" name="combat look delta L" help="how far we can turn our head left away from our aiming vector when in combat" units="degrees" />
										<field type="Angle" name="combat look delta R" help="how far we can turn our head right away from our aiming vector when in combat" units="degrees" />
										<field type="RealBounds" name="noncombat idle looking" help="rate at which we change look around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="noncombat idle aiming" help="rate at which we change aiming directions when looking around randomly when not in combat" units="seconds" />
										<field type="RealBounds" name="combat idle looking" help="rate at which we change look around randomly when searching or in combat" units="seconds" />
										<field type="RealBounds" name="combat idle aiming" help="rate at which we change aiming directions when looking around randomly when searching or in combat" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_look_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="movement properties">
						<block name="character_movement_block" maxCount="1" display="character_movement_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_movement_block_fields size="36" sizeIdentifer="sizeof(struct character_movement_properties)" fieldCount="15">
									<fields>
										<field type="LongFlags" name="movement flags">
											<definition count="7">
												<entry>danger crouch allow movement</entry>
												<entry>no side-step</entry>
												<entry>prefer to combar near friends</entry>
												<entry>hop (to cover path segements)</entry>
												<entry>perch</entry>
												<entry>has flying mode</entry>
												<entry>disallow crouch</entry>
											</definition>
										</field>
										<field type="Real" name="pathfinding radius" />
										<field type="Real" name="destination radius" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="dive grenade chance" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle leap min size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle leap max size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Enum" name="obstacle smashable size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Enum" name="jump height">
											<definition count="8">
												<entry>NONE</entry>
												<entry>down</entry>
												<entry>step</entry>
												<entry>crouch</entry>
												<entry>stand</entry>
												<entry>storey</entry>
												<entry>tower</entry>
												<entry>infinite</entry>
											</definition>
										</field>
										<field type="LongFlags" name="movement hints">
											<definition count="16">
												<entry>vault step</entry>
												<entry>vault crouch</entry>
												<entry />
												<entry />
												<entry />
												<entry>mount step</entry>
												<entry>mount crouch</entry>
												<entry>mount stand</entry>
												<entry />
												<entry />
												<entry />
												<entry>hoist crouch</entry>
												<entry>hoist stand</entry>
												<entry />
												<entry />
												<entry />
											</definition>
										</field>
										<field type="Real" name="throttle scale" />
										<field type="Terminator" />
									</fields>
								</character_movement_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="swarm properties">
						<block name="character_swarm_block" maxCount="3" display="character_swarm_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_swarm_block_fields size="40" sizeIdentifer="sizeof(struct character_swarm_properties)" fieldCount="14">
									<fields>
										<field type="UselessPad" name="" definition="48" />
										<field type="ShortInteger" name="scatter killed count" help="After the given number of deaths, the swarm scatters" />
										<field type="Pad" name="" definition="2" />
										<field type="Real" name="scatter radius" help="the distance from the target that the swarm scatters" />
										<field type="Real" name="scatter time" help="amount of time to remain scattered" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="hound min distance" />
										<field type="Real" name="hound max distance" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="perlin offset scale" help="amount of randomness added to creature's throttle" units="[0-1]" />
										<field type="RealBounds" name="offset period" help="how fast the creature changes random offset to throttle" units="s" />
										<field type="Real" name="perlin idle movement threshold" help="a random offset lower then given threshold is made 0. (threshold of 1 = no movement)" units="[0-1]" />
										<field type="Real" name="perlin combat movement threshold" help="a random offset lower then given threshold is made 0. (threshold of 1 = no movement)" units="[0-1]" />
										<field type="Terminator" />
									</fields>
								</character_swarm_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="36" />
					<field type="Block" name="ready properties">
						<block name="character_ready_block" maxCount="3" display="character_ready_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_ready_block_fields size="8" sizeIdentifer="sizeof(struct character_ready_properties)" fieldCount="2">
									<fields>
										<field type="RealBounds" name="ready time bounds" help="Character will pause for given time before engaging threat" />
										<field type="Terminator" />
									</fields>
								</character_ready_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="engage properties">
						<block name="character_engage_block" maxCount="3" display="character_engage_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_engage_block_fields size="16" sizeIdentifer="sizeof(struct character_engage_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="flags">
											<definition count="3">
												<entry>engage perch</entry>
												<entry>fight constant movement</entry>
												<entry>flight fight constant movement</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="Crouch danger threshold" help="When danger rises above the threshold, the actor crouches" />
										<field type="Real" name="Stand danger threshold" help="When danger drops below this threshold, the actor can stand again." />
										<field type="Real" name="Fight danger move threshold" help="When danger goes above given level, this actor switches firing positions" />
										<field type="Terminator" />
									</fields>
								</character_engage_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="charge properties">
						<block name="character_charge_block" maxCount="3" display="character_charge_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="4">
							<versions>
								<charge_fields_v1 size="40" sizeIdentifer="sizeof(character_charge_properties_v1)" fieldCount="10">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v1>
								<charge_fields_v2 size="44" sizeIdentifer="sizeof(character_charge_properties_v2)" fieldCount="11">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v2>
								<charge_fields_v3 size="48" sizeIdentifer="sizeof(character_charge_properties_v3)" fieldCount="12">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Terminator" />
									</fields>
								</charge_fields_v3>
								<charge_fields_v4 size="72" sizeIdentifer="sizeof(struct character_charge_properties)" fieldCount="16">
									<fields>
										<field type="LongFlags" name="Charge flags">
											<definition count="2">
												<entry>offhand melee allowed</entry>
												<entry>berserk whenever charge</entry>
											</definition>
										</field>
										<field type="Real" name="melee consider range" />
										<field type="Real" name="melee chance" help="chance of initiating a melee within a 1 second period" />
										<field type="Real" name="melee attack range" />
										<field type="Real" name="melee abort range" />
										<field type="Real" name="melee attack timeout" help="Give up after given amount of time spent charging" units="seconds" />
										<field type="Real" name="melee attack delay timer" help="don't attempt again before given time since last melee" units="seconds" />
										<field type="RealBounds" name="melee leap range" />
										<field type="Real" name="melee leap chance" />
										<field type="Real" name="ideal leap velocity" />
										<field type="Real" name="max leap velocity" />
										<field type="Real" name="melee leap ballistic" />
										<field type="Real" name="melee delay timer" help="time between melee leaps" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="TagReference" name="berserk weapon" help="when I berserk, I pull out a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</charge_fields_v4>
							</versions>
						</block>
					</field>
					<field type="Explanation" name="Danger Values" definition="Danger values can be found in the ai-globals section of the globals tag." />
					<field type="Block" name="evasion properties">
						<block name="character_evasion_block" maxCount="3" display="character_evasion_block" flags="0" maxIdentifer="k_style_attitude_count" procPostprocess="True" procFormat="True" version="1">
							<versions>
								<character_evasion_block_fields size="20" sizeIdentifer="sizeof(struct character_evasion_properties)" fieldCount="8">
									<fields>
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Evasion danger threshold" help="Consider evading when immediate danger surpasses threshold" />
										<field type="Real" name="Evasion delay timer" help="Wait at least this delay between evasions" />
										<field type="Real" name="Evasion chance" help="If danger is above threshold, the chance that we will evade. Expressed as chance of evading within a 1 second time period" />
										<field type="Real" name="Evasion proximity threshold" help="If target is within given proximity, possibly evade" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="dive retreat chance" help="Chance of retreating (fleeing) after danger avoidance dive" />
										<field type="Terminator" />
									</fields>
								</character_evasion_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="cover properties">
						<block name="character_cover_block" maxCount="3" display="character_cover_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_cover_block_fields size="64" sizeIdentifer="sizeof(struct character_cover_properties)" fieldCount="19">
									<fields>
										<field type="LongFlags" name="cover flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="hide behind cover time" help="how long we stay behind cover after seeking cover" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="Cover vitality threshold" help="When vitality drops below this level, possibly trigger a cover" />
										<field type="Real" name="Cover shield fraction" help="trigger cover when shield drops below this fraction (low shield cover impulse must be enabled)" />
										<field type="Real" name="Cover check delay" help="amount of time I will wait before trying again after covering" />
										<field type="Real" name="Emerge from cover when shield fraction reaches threshold" help="Emerge from cover when shield fraction reaches threshold" />
										<field type="Real" name="Cover danger threshold" help="Danger must be this high to cover. At a danger level of 'danger threshold', the chance of seeking cover is the cover chance lower bound (below)" />
										<field type="Real" name="Danger upper threshold" help="At or above danger level of upper threshold, the chance of seeking cover is the cover chance upper bound (below)" />
										<field type="Explanation" name="Cover chance" definition="The Bounds on the chance of seeking cover.&#xA;The lower bound is valid when the danger is at 'danger threshold'&#xA;The upper bound is valid when the danger is at or above 'danger upper threshold'.&#xA;It is interpolated linearly everywhere in between.&#xA; All chances are expressed as 'chance of triggering cover in a 1 second period'." />
										<field type="RealBounds" name="Cover chance" help="Bounds on the chances of seeking cover." />
										<field type="Real" name="Proximity self-preserve" help="When the proximity_self_preservation impulse is enabled, triggers self-preservation when target within this distance" units="wus" />
										<field type="Real" name="Disallow cover distance" help="Disallow covering from visible target under the given distance away" units="world units" />
										<field type="UselessPad" name="" definition="16" />
										<field type="Real" name="proximity melee distance" help="When self preserving from a target less than given distance, causes melee attack (assuming proximity_melee_impulse is enabled)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="unreachable enemy danger threshold" help="When danger from an unreachable enemy surpasses threshold, actor cover (assuming unreachable_enemy_cover impulse is enabled)" />
										<field type="Real" name="scary target threshold" help="When target is aware of me and surpasses the given scariness, self-preserve (scary_target_cover_impulse)" />
										<field type="Terminator" />
									</fields>
								</character_cover_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="retreat properties">
						<block name="character_retreat_block" maxCount="3" display="character_retreat_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_retreat_block_fields size="84" sizeIdentifer="sizeof(struct character_retreat_properties)" fieldCount="22">
									<fields>
										<field type="LongFlags" name="Retreat flags">
											<definition count="2">
												<entry>Zig-zag when fleeing</entry>
												<entry>Unused1</entry>
											</definition>
										</field>
										<field type="Real" name="Shield threshold" help="When shield vitality drops below given amount, retreat is triggered by low_shield_retreat_impulse" />
										<field type="Real" name="Scary target threshold" help="When confronting an enemy of over the given scariness, retreat is triggered by scary_target_retreat_impulse" />
										<field type="Real" name="Danger threshold" help="When perceived danger rises above the given threshold, retreat is triggered by danger_retreat_impulse" />
										<field type="Real" name="Proximity threshold" help="When enemy closer than given threshold, retreat is triggered by proximity_retreat_impulse" />
										<field type="UselessPad" name="" definition="16" />
										<field type="RealBounds" name="min/max forced cower time bounds" help="actor cowers for at least the given amount of time" />
										<field type="RealBounds" name="min/max cower timeout bounds" help="actor times out of cower after the given amount of time" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="proximity ambush threshold" help="If target reaches is within the given proximity, an ambush is triggered by the proximity ambush impulse" />
										<field type="Real" name="awareness ambush threshold" help="If target is less than threshold (0-1) aware of me, an ambush is triggered by the vulnerable enemy ambush impulse" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Real" name="leader dead retreat chance" help="If leader-dead-retreat-impulse is active, gives the chance that we will flee when our leader dies within 4 world units of us" />
										<field type="Real" name="peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when one of our peers (friend of the same race) dies within 4 world units of us" />
										<field type="Real" name="second peer dead retreat chance" help="If peer-dead-retreat-impulse is active, gives the chance that we will flee when a second peer (friend of the same race) dies within 4 world units of us" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Angle" name="zig-zag angle" help="The angle from the intended destination direction that a zig-zag will cause" units="degrees" />
										<field type="Real" name="zig-zag period" help="How long it takes to zig left and then zag right." units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Real" name="retreat grenade chance" help="The likelihood of throwing down a grenade to cover our retreat" />
										<field type="TagReference" name="backup weapon" help="If I want to flee and I don't have flee animations with my current weapon, throw it away and try a ...">
											<definition flags="0" groupTag="weap" />
										</field>
										<field type="Terminator" />
									</fields>
								</character_retreat_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="search properties">
						<block name="character_search_block" maxCount="3" display="character_search_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_search_block_fields size="20" sizeIdentifer="sizeof(struct character_search_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Search flags">
											<definition count="2">
												<entry>crouch on investigate</entry>
												<entry>walk on pursuit</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="search time" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Uncover" definition="" />
										<field type="RealBounds" name="Uncover distance bounds" help="Distance of uncover point from target. Hard lower limit, soft upper limit." />
										<field type="Terminator" />
									</fields>
								</character_search_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="pre-search properties">
						<block name="character_presearch_block" maxCount="3" display="character_presearch_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="2">
							<versions>
								<presearch_fields_v1 size="20" sizeIdentifer="sizeof(character_presearch_properties_v1)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="Min/Max pre-search bounds" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="Max uncover distance" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v1>
								<presearch_fields_v2 size="36" sizeIdentifer="sizeof(struct character_presearch_properties)" fieldCount="7">
									<fields>
										<field type="LongFlags" name="Pre-search flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="RealBounds" name="min presearch time" help="If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off" units="seconds" />
										<field type="RealBounds" name="max presearch time" help="Presearch turns off after the given time" units="seconds" />
										<field type="Real" name="Min certainty radius" />
										<field type="Real" name="DEPRECATED" />
										<field type="RealBounds" name="min suppressing time" help="if the min suppressing time expires and the target is outside the min-certainty radius, suppressing fire turns off" />
										<field type="Terminator" />
									</fields>
								</presearch_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="idle properties">
						<block name="character_idle_block" maxCount="3" display="character_idle_block" flags="0" maxIdentifer="k_style_attitude_count" procFormat="True" version="1">
							<versions>
								<character_idle_block_fields size="12" sizeIdentifer="sizeof(struct character_idle_properties)" fieldCount="4">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="UselessPad" name="" definition="24" />
										<field type="RealBounds" name="idle pose delay time" help="time range for delays between idle poses" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_idle_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="vocalization properties">
						<block name="character_vocalization_block" maxCount="1" display="character_vocalization_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_vocalization_block_fields size="8" sizeIdentifer="sizeof(struct character_vocalization_properties)" fieldCount="3">
									<fields>
										<field type="Real" name="look comment time" help="How long does the player look at an AI before the AI responds?" units="s" />
										<field type="Real" name="look long comment time" help="How long does the player look at the AI before he responds with his 'long look' comment?" units="s" />
										<field type="Terminator" />
									</fields>
								</character_vocalization_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="boarding properties">
						<block name="character_boarding_block" maxCount="1" display="character_boarding_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_boarding_block_fields size="16" sizeIdentifer="sizeof(struct character_boarding_properties)" fieldCount="6">
									<fields>
										<field type="LongFlags" name="flags">
											<definition count="1">
												<entry>airborne boarding</entry>
											</definition>
										</field>
										<field type="Real" name="max distance" help="maximum distance from entry point that we will consider boarding" units="wus" />
										<field type="Real" name="abort distance" help="give up trying to get in boarding seat if entry point is further away than this" units="wus" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="max speed" help="maximum speed at which we will consider boarding" units="wu/s" />
										<field type="Terminator" />
									</fields>
								</character_boarding_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="12" />
					<field type="Block" name="boss properties">
						<block name="character_boss_block" maxCount="1" display="character_boss_block" flags="0" maxIdentifer="1" version="1">
							<versions>
								<character_boss_block_fields size="12" sizeIdentifer="sizeof(struct character_boss_properties)" fieldCount="5">
									<fields>
										<field type="Pad" name="" definition="4" />
										<field type="UselessPad" name="" definition="36" />
										<field type="Real" name="flurry damage threshold" help="when more than x damage is caused a juggernaut flurry is triggered" units="[0..1]" />
										<field type="Real" name="flurry time" help="flurry lasts this long" units="seconds" />
										<field type="Terminator" />
									</fields>
								</character_boss_block_fields>
							</versions>
						</block>
					</field>
					<field type="Block" name="weapons properties" attributeGroup="sort">
						<block name="character_weapons_block" maxCount="100" display="character_weapons_block" flags="0" maxIdentifer="100" procPostprocess="True" version="2">
							<versions>
								<weapon_fields_v1 size="204" sizeIdentifer="sizeof(character_weapon_properties_v1)" fieldCount="46">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="Real" name="maximum firing distance" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
										<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="RealBounds" name="desired combat range" units="world units" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
										<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
										<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
										<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
										<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
										<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
										<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
										<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
										<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
										<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Special Targeting" definition="" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="Explanation" name="Ballistic firing" definition="" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="Terminator" />
									</fields>
								</weapon_fields_v1>
								<weapon_fields_v2 size="224" sizeIdentifer="sizeof(struct character_weapon_properties)" fieldCount="52">
									<fields>
										<field type="LongFlags" name="weapons flags">
											<definition count="3">
												<entry>bursting inhibits movement</entry>
												<entry>must crouch to shoot</entry>
												<entry>use extended safe-to-save range</entry>
											</definition>
										</field>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Combat ranges" definition="" />
										<field type="Real" name="maximum firing range" help="we can only fire our weapon at targets within this distance" units="world units" />
										<field type="Real" name="minimum firing range" help="weapon will not be fired at target closer than given distance" />
										<field type="RealBounds" name="normal combat range" units="world units" />
										<field type="Real" name="bombardment range" help="we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)" />
										<field type="Real" name="Max special target distance" help="Specific target regions on a vehicle or unit will be fired upon only under the given distance" units="world units" />
										<field type="RealBounds" name="timid combat range" units="world units" />
										<field type="RealBounds" name="aggressive combat range" units="world units" />
										<field type="Explanation" name="Ballistic Firing" definition="" />
										<field type="Real" name="super-ballistic range" help="we try to aim our shots super-ballistically if target is outside this range (zero = never)" />
										<field type="RealBounds" name="Ballistic firing bounds" help="At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used" units="world units" />
										<field type="RealBounds" name="Ballistic fraction bounds" help="Controls speed and degree of arc. 0 = high, slow, 1 = low, fast" units="[0-1]" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="RealBounds" name="first burst delay time" units="seconds" />
										<field type="Real" name="surprise delay time" units="seconds" />
										<field type="Real" name="surprise fire-wildly time" units="seconds" />
										<field type="Real" name="death fire-wildly chance" units="[0,1]" />
										<field type="Real" name="death fire-wildly time" units="seconds" />
										<field type="UselessPad" name="" definition="12" />
										<field type="RealVector3D" name="custom stand gun offset" help="custom standing gun offset for overriding the default in the base actor" />
										<field type="RealVector3D" name="custom crouch gun offset" help="custom crouching gun offset for overriding the default in the base actor" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="special-case firing properties" definition="" />
										<field type="Enum" name="special-fire mode" help="the type of special weapon fire that we can use">
											<definition count="3">
												<entry>none</entry>
												<entry>overcharge</entry>
												<entry>secondary trigger</entry>
											</definition>
										</field>
										<field type="Enum" name="special-fire situation" help="when we will decide to use our special weapon fire mode">
											<definition count="4">
												<entry>never</entry>
												<entry>enemy visible</entry>
												<entry>enemy out of sight</entry>
												<entry>strafing</entry>
											</definition>
										</field>
										<field type="Real" name="special-fire chance" help="how likely we are to use our special weapon fire mode" units="[0,1]" />
										<field type="Real" name="special-fire delay" help="how long we must wait between uses of our special weapon fire mode" units="seconds" />
										<field type="Real" name="special damage modifier" help="damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)" units="[0,1]" />
										<field type="Angle" name="special projectile error" help="projectile error angle for special weapon fire (applied in addition to the normal error)" units="degrees" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Weapon drop when killed" definition="" />
										<field type="RealBounds" name="drop weapon loaded" help="amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)" />
										<field type="ShortIntegerBounds" name="drop weapon ammo" help="total number of rounds in the weapon that we drop (ignored for energy weapons)" />
										<field type="UselessPad" name="" definition="24" />
										<field type="Explanation" name="Accuracy" definition="Parameters control how accuracy changes over the duration of a series of bursts&#xA;Accuracy is an analog value between 0 and 1. At zero, the parameters of the first&#xA;firing-pattern block is used. At 1, the parameters in the second block is used. In&#xA;between, all the values are linearly interpolated" />
										<field type="RealBounds" name="normal accuracy bounds" help="Indicates starting and ending accuracies at normal difficulty" />
										<field type="Real" name="normal accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="heroic accuracy bounds" help="Indicates starting and ending accuracies at heroic difficulty" />
										<field type="Real" name="heroic accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealBounds" name="legendary accuracy bounds" help="Indicates starting and ending accuracies at legendary difficulty" />
										<field type="Real" name="legendary accuracy time" help="The amount of time it takes the accuracy to go from starting to ending" />
										<field type="UselessPad" name="" definition="4" />
										<field type="UselessPad" name="" definition="48" />
										<field type="Block" name="firing patterns">
											<block name="character_firing_pattern_block" maxCount="2" display="character_firing_pattern_block" flags="0" maxIdentifer="2" procFormat="True" version="1">
												<versions>
													<character_firing_pattern_block_fields size="64" sizeIdentifer="sizeof(struct character_firing_pattern)" fieldCount="16">
														<fields>
															<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
															<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
															<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
															<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
															<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
															<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
															<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
															<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
															<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
															<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
															<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
															<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
															<field type="UselessPad" name="" definition="12" />
															<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
															<field type="Angle" name="maximum error angle" help="cap on the maximum angle by which we will miss target (restriction on burst origin radius" units="degrees" />
															<field type="Terminator" />
														</fields>
													</character_firing_pattern_block_fields>
												</versions>
											</block>
										</field>
										<field type="TagReference" name="weapon melee damage">
											<definition flags="0" groupTag="jpt!" />
										</field>
										<field type="Terminator" />
									</fields>
								</weapon_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Block" name="firing pattern properties" attributeGroup="sort">
						<block name="character_firing_pattern_properties_block" maxCount="100" display="character_firing_pattern_properties_block" flags="0" maxIdentifer="100" version="1">
							<versions>
								<character_firing_pattern_properties_block_fields size="28" sizeIdentifer="sizeof(struct character_firing_pattern_properties)" fieldCount="4">
									<fields>
										<field type="TagReference" name="weapon" isBlockName="True">
											<definition flags="2" groupTag="weap" />
										</field>
										<field type="UselessPad" name="" definition="24" />
										<field type="Block" name="firing patterns">
											<block name="character_firing_pattern_block" maxCount="2" display="character_firing_pattern_block" flags="0" maxIdentifer="2" procFormat="True" version="1">
												<versions>
													<character_firing_pattern_block_fields size="64" sizeIdentifer="sizeof(struct character_firing_pattern)" fieldCount="16">
														<fields>
															<field type="Real" name="rate of fire" help="how many times per second we pull the trigger (zero = continuously held down)" />
															<field type="Real" name="target tracking" help="how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0= fire at current position" units="[0,1]" />
															<field type="Real" name="target leading" help="how much we lead moving targets. 0.0= no prediction. 1.0= predict completely." units="[0,1]" />
															<field type="Explanation" name="burst geometry" definition="at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.&#xA;the burst origin angle controls whether this error is exactly horizontal or might have some vertical component.&#xA;&#xA;over the course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also controlled by an angle that specifies how close to the horizontal it is.&#xA;&#xA;for example if the burst origin angle and the burst return angle were both zero, and the return length was the same as the burst length, every burst would start the same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the burst." />
															<field type="Real" name="burst origin radius" help="how far away from the target the starting point is" units="world units" />
															<field type="Angle" name="burst origin angle" help="the range from the horizontal that our starting error can be" units="degrees" />
															<field type="RealBounds" name="burst return length" help="how far the burst point moves back towards the target (could be negative)" units="world units" />
															<field type="Angle" name="burst return angle" help="the range from the horizontal that the return direction can be" units="degrees" />
															<field type="RealBounds" name="burst duration" help="how long each burst we fire is" units="seconds" />
															<field type="RealBounds" name="burst separation" help="how long we wait between bursts" units="seconds" />
															<field type="Real" name="weapon damage modifier" help="what fraction of its normal damage our weapon inflicts (zero = no modifier)" />
															<field type="Angle" name="projectile error" help="error added to every projectile we fire" units="degrees" />
															<field type="UselessPad" name="" definition="12" />
															<field type="Angle" name="burst angular velocity" help="the maximum rate at which we can sweep our fire (zero = unlimited)" units="degrees per second" />
															<field type="Angle" name="maximum error angle" help="cap on the maximum angle by which we will miss target (restriction on burst origin radius" units="degrees" />
															<field type="Terminator" />
														</fields>
													</character_firing_pattern_block_fields>
												</versions>
											</block>
										</field>
										<field type="Terminator" />
									</fields>
								</character_firing_pattern_properties_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="Block" name="grenades properties" attributeGroup="sort">
						<block name="character_grenades_block" maxCount="10" display="character_grenades_block" flags="0" maxIdentifer="10" procPostprocess="True" version="1">
							<versions>
								<character_grenades_block_fields size="60" sizeIdentifer="sizeof(struct character_grenade_properties)" fieldCount="21">
									<fields>
										<field type="LongFlags" name="grenades flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="Enum" name="grenade type" help="type of grenades that we throw" isBlockName="True">
											<definition count="2">
												<entry>human fragmentation</entry>
												<entry>covenant plasma</entry>
											</definition>
										</field>
										<field type="Enum" name="trajectory type" help="how we throw our grenades">
											<definition count="3">
												<entry>toss</entry>
												<entry>lob</entry>
												<entry>bounce</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="ShortInteger" name="minimum enemy count" help="how many enemies must be within the radius of the grenade before we will consider throwing there" />
										<field type="Real" name="enemy radius" help="we consider enemies within this radius when determining where to throw" units="world units" />
										<field type="Real" name="grenade ideal velocity" help="how fast we LIKE to throw our grenades" units="world units per second" />
										<field type="Real" name="grenade velocity" help="the fastest we can possibly throw our grenades" units="world units per second" />
										<field type="RealBounds" name="grenade ranges" help="ranges within which we will consider throwing a grenade" units="world units" />
										<field type="Real" name="collateral damage radius" help="we won't throw if there are friendlies around our target within this range" units="world units" />
										<field type="RealFraction" name="grenade chance" help="how likely we are to throw a grenade in one second" units="[0,1]" />
										<field type="Real" name="grenade throw delay" help="How long we have to wait after throwing a grenade before we can throw another one" units="seconds" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="grenade uncover chance" help="how likely we are to throw a grenade to flush out a target in one second" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="RealFraction" name="anti-vehicle grenade chance" help="how likely we are to throw a grenade against a vehicle" units="[0,1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Grenade drop when killed" definition="" />
										<field type="ShortIntegerBounds" name="grenade count" help="number of grenades that we start with" />
										<field type="Real" name="dont drop grenades chance" help="how likely we are not to drop any grenades when we die, even if we still have some" units="[0,1]" />
										<field type="Terminator" />
									</fields>
								</character_grenades_block_fields>
							</versions>
						</block>
					</field>
					<field type="UselessPad" name="" definition="24" />
					<field type="Block" name="vehicle properties" attributeGroup="sort">
						<block name="character_vehicle_block" maxCount="100" display="character_vehicle_block" flags="0" maxIdentifer="100" version="2">
							<versions>
								<vehicle_fields_v1 size="128" sizeIdentifer="sizeof(character_vehicle_properties_v1)" fieldCount="42">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>Flag1</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="DEPRECATED (ai strafing abort range)" help="(All vehicles) Distance at which charge will be aborted" />
										<field type="Real" name="ai avoidance distance" help="(Banshee, Sentinels, Dropships) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="UselessPad" name="" definition="20" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v1>
								<vehicle_fields_v2 size="196" sizeIdentifer="sizeof(struct character_vehicle_properties)" fieldCount="60">
									<fields>
										<field type="TagReference" name="unit" isBlockName="True">
											<definition flags="2" groupTag="unit" />
										</field>
										<field type="TagReference" name="style" isBlockName="True">
											<definition flags="0" groupTag="styl" />
										</field>
										<field type="UselessPad" name="" definition="32" />
										<field type="LongFlags" name="vehicle flags">
											<definition count="1">
												<entry>passengers adopt original squad</entry>
											</definition>
										</field>
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Pathfinding" definition="" />
										<field type="Real" name="ai pathfinding radius" help="(Ground vehicles)" units="world units" />
										<field type="Real" name="ai destination radius" help="(All vehicles) Distance within which goal is considered reached" units="world units" />
										<field type="Real" name="ai deceleration distanceworld units" help="(All vehicles)Distance from goal at which AI starts to decelerate" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Turning" definition="" />
										<field type="Real" name="ai turning radius" help="(Warthog, Pelican, Ghost) Idealized average turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai inner turning radius (&lt; tr)" help="(Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)" />
										<field type="Real" name="ai ideal turning radius (&gt; tr)" help="(Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Steering" definition="" />
										<field type="Angle" name="ai banshee steering maximum" help="(Banshee)" />
										<field type="Real" name="ai max steering angle" help="(Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)" units="degrees" />
										<field type="Real" name="ai max steering delta" help="(pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn acceleration)" units=" degrees" />
										<field type="Real" name="ai oversteering scale" help="(Warthog, ghosts, wraiths)" />
										<field type="AngleBounds" name="ai oversteering bounds" help="(Banshee) Angle to goal at which AI will oversteer" />
										<field type="Real" name="ai sideslip distance" help="(Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)" />
										<field type="Real" name="ai avoidance distance" help="(Banshee-style) Look-ahead distance for obstacle avoidance" units="world units" />
										<field type="Real" name="ai min urgency" help="(Banshees)The minimum urgency with which a turn can be made (urgency = percent of maximum steering delta)" units="[0-1]" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Explanation" name="Throttle" definition="" />
										<field type="Real" name="ai throttle maximum" help="(All vehicles)" units="(0 - 1)" />
										<field type="Real" name="ai goal min throttle scale" help="(Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)" />
										<field type="Real" name="ai turn min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)" />
										<field type="Real" name="ai direction min throttle scale" help="(Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)" />
										<field type="Real" name="ai acceleration scale" help="(warthogs, ghosts) The maximum allowable change in throttle between ticks" units="(0-1)" />
										<field type="Real" name="ai throttle blend" help="(dropships, sentinels) The degree of throttle blending between one tick and the next (0 = no blending)" units="(0-1)" />
										<field type="Real" name="theoretical max speed" help="(dropships, warthogs, ghosts) About how fast I can go." units="wu/s" />
										<field type="Real" name="error scale" help="(dropships, warthogs) scale on the difference between desired and actual speed, applied to throttle" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Explanation" name="Combat" definition="" />
										<field type="Angle" name="ai allowable aim deviation angle" />
										<field type="UselessPad" name="" definition="12" />
										<field type="Explanation" name="Behavior" definition="" />
										<field type="Real" name="ai charge tight angle distance" help="(All vehicles) The distance at which the tight angle criterion is used for deciding to vehicle charge" />
										<field type="Real" name="ai charge tight angle" help="(All vehicles) Angle cosine within which the target must be when target is closer than tight angle distance in order to charge" units="[0-1]" />
										<field type="Real" name="ai charge repeat timeout" help="(All vehicles) Time delay between vehicle charges" />
										<field type="Real" name="ai charge look-ahead time" help="(All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact" />
										<field type="Real" name="ai charge consider distance" help="Consider charging the target when it is within this range (0 = infinite distance)" />
										<field type="Real" name="ai charge abort distance" help="Abort the charge when the target get more than this far away (0 = never abort)" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="vehicle ram timeout" help="The ram behavior stops after a maximum of the given number of seconds" />
										<field type="Real" name="ram paralysis time" help="The ram behavior freezes the vehicle for a given number of seconds after performing the ram" />
										<field type="UselessPad" name="" definition="4" />
										<field type="Real" name="ai cover damage threshold" help="(All vehicles) Trigger a cover when recent damage is above given threshold (damage_vehicle_cover impulse)" />
										<field type="Real" name="ai cover min distance" help="(All vehicles) When executing vehicle-cover, minimum distance from the target to flee to" />
										<field type="Real" name="ai cover time" help="(All vehicles) How long to stay away from the target" />
										<field type="Real" name="ai cover min boost distance" help="(All vehicles) Boosting allowed when distance to cover destination is greater then this." />
										<field type="Real" name="turtling recent damage threshold" help="If vehicle turtling behavior is enabled, turtling is initiated if 'recent damage' surpasses the given threshold" units="%" />
										<field type="Real" name="turtling min time" help="If the vehicle turtling behavior is enabled, turtling occurs for at least the given time" units="seconds" />
										<field type="Real" name="turtling timeout" help="The turtled state times out after the given number of seconds" units="seconds" />
										<field type="UselessPad" name="" definition="8" />
										<field type="Enum" name="obstacle ignore size">
											<definition count="7">
												<entry>none</entry>
												<entry>tiny</entry>
												<entry>small</entry>
												<entry>medium</entry>
												<entry>large</entry>
												<entry>huge</entry>
												<entry>immobile</entry>
											</definition>
										</field>
										<field type="Pad" name="" definition="2" />
										<field type="Terminator" />
									</fields>
								</vehicle_fields_v2>
							</versions>
						</block>
					</field>
					<field type="Terminator" />
				</fields>
			</character_tag_v3>
		</versions>
	</block>
</tagGroup>